//General-Use Arrays with Getter/Setter functions
///16th September, 2019

//A generic array, pre-included with all quests. 
//float stdArray[4096]; //This should be called GlobalRAM[]
int std_zh___GlobalRAM[4096];

//! Because this is the first global array that will likely be declared, called from the 'import "std.zh"' 
//! directive in scripts, or from the buffer; as the import directive for std.zh is usually the very first
//! instruction in any compilation attempt; this array will automatically have the highest numbered pointer.
//! This means that if it is added after a quest is made, it will be unavailable for use in existing SAVES
//! but it will not change the ordering of other arrays, or variables. 
//! 
//! Thus, running the quest on an old SAVE will NOT break anything, but it allows a quest developer who uses
//! this feature FROM THE ONSET, before releasing a agme, to EASILY go back in, and add global values EVEN
//! after releasing a quest, and with people playing it, WITHOUT invalidating their saved games; and it 
//! WILL allow them to use the new variables. 
//! 
//! It's essentially a catch-all for questmakers, as a way to later expand a quest, without breaking player
//! save files, or requiring them to start from scratch, to play the update. 

const float STD_VERSION = 1.5001;

const int STD_DATE_YEAR = 2019;
const int STD_DATE_MONTH = 9;
const int STD_DATE_DAY = 16;
const int STD_DATE_HOUR = 2;
const int STD_DATE_MINUTE = 30;

float __stdzh_getVersion() { return STD_VERSION; }
float __stdzh_getVersionDate()
{
	float dt = STD_DATE_MONTH;
	dt += STD_DATE_DAY * 100;
	dt += STD_DATE_YEAR / 10000;
	return dt;
}
float __stdzh_getVersionTime()
{
	float tm = STD_DATE_HOUR;
	tm += STD_DATE_MINUTE / 10000;
	return tm;
}
	

//Data Handling Functions

//Get the value of any 'indx' in the generic array.
float __stdzh_GetV(int indx)
{
	return std_zh___GlobalRAM[indx];
}

//Set the value of any 'indx', to a specific amount 'value'.
void __stdzh_SetV(int indx, int value)
{
	std_zh___GlobalRAM[indx] = value;
}

//Increase the value of any 'indx' by +1.
void __stdzh_IncV(int indx) 
{
	++std_zh___GlobalRAM[indx];
}

//Increase the value of any 'indx' by 'amount'.
void __stdzh_IncV(int indx, int amount)
{
	std_zh___GlobalRAM[indx] += amount;
}

//Decrease the value of any 'indx' by -1.
void __stdzh_DecV(int indx)
{
	--std_zh___GlobalRAM[indx];
}

//Decrease the value of any 'indx' by 'amount'.
void __stdzh_DecV(int indx, int amount)
{
	std_zh___GlobalRAM[indx] -= amount;
}

//Stores the pointer of any array to an inmdex of GlobalRAM to allow accessing it from any script. 
void __stdzh_StoreArrayPointer(int arr, int indx)
{
    std_zh___GlobalRAM[indx] = arr;
}